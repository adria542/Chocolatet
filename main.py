from flask import Flask, request
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from datetime import datetime, timedelta
import json
import os
import asyncio
import threading
import requests

TOKEN = os.getenv("BOT_TOKEN")
DATA_FILE = "cita.json"
GOOGLE_SCRIPT_WEBHOOK = "https://script.google.com/macros/s/AKfycbwMrvIWmTHWzGp0UYlu1d0NcSXZT_8Bc3d_ZGbq-h2bLUJ7phsjTwjb7koyCIj56ptD/exec"
LOG_BUFFER_FILE = "log_buffer.json"
lock = threading.Lock()

def a√±adir_log_buffer(usuario, comando):
    lock.acquire()
    try:
        if os.path.exists(LOG_BUFFER_FILE):
            with open(LOG_BUFFER_FILE, "r") as f:
                data = json.load(f)
        else:
            data = []

        data.append({"usuario": usuario, "comando": comando, "fecha": datetime.now().isoformat()})

        with open(LOG_BUFFER_FILE, "w") as f:
            json.dump(data, f)
    finally:
        lock.release()

def guardar_cita(fecha_str):
    with open(DATA_FILE, "w") as f:
        json.dump({"cita": fecha_str}, f)

def cargar_cita():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE) as f:
            return json.load(f).get("cita")
    return None

def registrar_evento(usuario, comando):
    try:
        requests.post(GOOGLE_SCRIPT_WEBHOOK,
                      json={"usuario": usuario, "comando": comando},
                      timeout=5)
    except Exception as e:
        print(f"Error enviando log a Google Sheets: {e}", flush=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name if update.effective_user else "Usuario desconocido"
    a√±adir_log_buffer(user, "/start")
    print(f"[{user}] Inici√≥ el bot con /start", flush=True)
    await update.message.reply_text(
        "¬°Hola! Soy un bot creado para Valentina y Adri√†. Hoy es un dia especial as√≠ que hemos habilitado un nuevo comando. Prueba a escribir /mes ü§ç"
    )


async def set_cita(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name if update.effective_user else "Usuario desconocido"
    a√±adir_log_buffer(user, "/set")
    if not context.args:
        print(f"[{user}] Us√≥ /set sin argumentos", flush=True)
        await update.message.reply_text("Usa el formato: /set YYYY-MM-DD HH:MM")
        return

    fecha_str = " ".join(context.args)
    try:
        dt = datetime.strptime(fecha_str, "%Y-%m-%d %H:%M")
        cita_str = dt.replace(second=0).strftime("%Y-%m-%d %H:%M:%S")
        guardar_cita(cita_str)
        print(f"[{user}] Guard√≥ una cita: {cita_str}", flush=True)
        await update.message.reply_text(f"Cita guardada para: {cita_str}")
    except ValueError:
        print(f"[{user}] Us√≥ /set con formato inv√°lido: {fecha_str}", flush=True)
        await update.message.reply_text("Formato incorrecto. Usa: /set 2025-06-15 20:00")

async def cuanto_falta(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name if update.effective_user else "Usuario desconocido"
    a√±adir_log_buffer(user, "/falta")
    cita_str = cargar_cita()
    if not cita_str:
        print(f"[{user}] Us√≥ /falta pero no hay cita guardada.", flush=True)
        await update.message.reply_text("No hay ninguna cita guardada.")
        return

    cita = datetime.strptime(cita_str, "%Y-%m-%d %H:%M:%S")
    ahora = datetime.now() + timedelta(hours=2)
    diferencia = cita - ahora

    if diferencia.total_seconds() <= 0:
        print(f"[{user}] Us√≥ /falta: la cita ya pas√≥ o es ahora mismo.", flush=True)
        await update.message.reply_text("¬°La cita ya pas√≥ o es ahora mismo! Divert√≠os")
    else:
        total_segundos = int(diferencia.total_seconds())
        dias = total_segundos // 86400
        horas = (total_segundos % 86400) // 3600
        minutos = (total_segundos % 3600) // 60
        segundos = total_segundos % 60
        print(f"[{user}] Us√≥ /falta: faltan {dias}d {horas}h {minutos}m {segundos}s", flush=True)
        await update.message.reply_text(
            f"Faltan {dias} d√≠as, {horas} horas, {minutos} minutos y {segundos} segundos para la cita. ‚è≥"
        )

async def mes_mensaje(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        """Hola, Chocolatet. Hoy hace un mes que empezamos a hablar. Y para hoy me ha apetecido contarte c√≥mo he vivido este √∫ltimo mes.
    
        Este √∫ltimo mes ha sido en el que m√°s cosas he sentido en mi vida. Ha habido momentos en los que pensaba que el mundo se me iba a comer y momentos en los que he estado m√°s feliz que nunca. Pero en todos ellos has estado t√∫.
    
        Cuando empezamos a hablar, sinceramente, no sab√≠a ni por d√≥nde tirar üòÇ, pero me encantaba poder leerte todos los d√≠as. Al levantarme, mientras trabajaba, mientras com√≠a, mientras descansaba, mientras hac√≠a cosas, mientras no hac√≠a nada, y antes de irme a descansar mientras alarg√°bamos nuestras conversaciones hasta horas adentradas en la madrugada.
    
        Entonces, justo el mismo d√≠a que qued√© contigo para vernos por primera vez, volvi√≥ mi pesadilla m√°s recurrente, y de la manera m√°s intensa en la que ha ocurrido nunca: todo el tema de la hospitalizaci√≥n de mi padre. Ten√≠a tantas incertezas en ese momento, pero tantas, que me costaba hasta vivir. No pod√≠a concentrarme en la oficina, no dorm√≠a bien, temblaba casi constantemente, y ten√≠a que ir varias veces al cuarto de ba√±o por tener amagos de v√≥mitos.
    
        Pero, durante todos esos d√≠as, ten√≠a un gran escape que fuiste t√∫. Que, aunque sin saberlo, me apoyabas solo con hablarme, me relajabas y me pon√≠as contento. Aunque las inseguridades me atacaran durante esos d√≠as, t√∫ las rebat√≠as constantemente. Yo pensaba: ¬øc√≥mo puede ser que esta chica quiera verme? Si m√≠rame c√≥mo soy. Pero t√∫ me hablabas a pesar de que hab√≠as visto mi perfil y las fotos que te enviaba. ¬øC√≥mo puede ser que esta chica no se aburra de hablar conmigo? Pero t√∫ me segu√≠as escribiendo todos los d√≠as al momento.
    
        Entonces lleg√≥ el d√≠a de verte. Iba nervioso, no te voy a mentir, y al verte dije: *wow, realmente nos vamos a ver JAJAJ*. Al subirnos al coche y empezar a hablar contigo se me pasaron todos los nervios, porque estuvimos hablando justo como lo esperaba. Luego seguimos charlando en la terraza, que fue un rato en el que estuve s√∫per a gusto. Y luego fuimos a la cama... No te voy a mentir, ten√≠a muchas ganas de ese momento, pero entonces los nervios de mi primera vez, sumados a los de la situaci√≥n de mi padre, pudieron conmigo...
    
        Yo en ese momento ten√≠a la mezcla de emociones m√°s fuerte que he tenido en mi vida. Por un lado, agradec√≠a que mi padre ese d√≠a ya estuviese mejor, y agradec√≠a el haber podido pasar esa noche contigo. Pero por el otro, sent√≠a que la estrella de las desgracias reposaba sobre mis hombros... Pero estuviste ah√≠. Fuiste la primera de mi c√≠rculo que se enter√≥ de lo de mi padre, y luego tuvimos una cena muy agradable y, antes de que se hiciera m√°s tarde, volvimos a Oliva. Te acompa√±√© a tu casa y me sent√≠ muy feliz de haber estado contigo y de sentir que seguir√≠amos est√°ndolo.
    
        Cuando volv√≠ al coche de Hugo y le cont√© c√≥mo hab√≠a vivido esa semana, no pude evitar derrumbarme. Llor√© toda la tensi√≥n que ten√≠a acumulada. Y tras eso fui cont√°ndoselo poco a poco al resto de mis amigos, y todos me dieron su apoyo. Menos mal que os ten√≠a a todos. Me podr√≠a haber vuelto loco de vivir eso solo...
    
        A partir de ah√≠ me relaj√© bastante. Pas√© mucho tiempo hablando contigo, en el hospital con mi padre, con mi familia y con mis amigos. Desde entonces, cada vez que nos hemos visto solo me han dado m√°s ganas de verte y m√°s ganas de conocerte.
    
        En nuestra segunda cita t√∫ ten√≠as tu graduaci√≥n, y como quer√≠a que nuestra cita fuera una gran parte de tu d√≠a especial, me esforc√© en que nuestra cena fuera buena. Compr√© los ingredientes con antelaci√≥n, invit√© a mis amigos para practicar y me sali√≥ bastante bien. Qu√© amarga sorpresa me llev√© al descubrir que eso se convertir√≠a en el fallo que no nos permitir√≠a cenar pasta carbonara esa noche. La verdad es que me agobi√© bastante en ese momento, pero t√∫ me alegraste la noche al intentar tirar para adelante e, incluso en esa situaci√≥n, preparar un plato de pasta... El abrazo que tuvimos en la cocina mientras esper√°bamos a que se terminara de cocer el bacon no lo voy a olvidar, igual que tampoco voy a olvidar el apag√≥n que tuvimos JAJAJ. Menos mal que pude compensarlo con un kebab que nos comimos mientras camin√°bamos por la playa.
    
        Luego, en nuestro tercer encuentro, la verdad es que ya estaba muy c√≥modo contigo, y me apetec√≠a bastante ver *Mamma Mia!* contigo, la verdad. Pero lo que termin√≥ pasando a mitad de pel√≠cula tambi√©n lo disfrut√© mucho. Que no te enga√±en las l√°grimas que solt√© esa noche y que t√∫ muy h√°bilmente supiste acallar con tu apoyo... Eran l√°grimas de frustraci√≥n conmigo mismo, que cada vez sufro menos cuando estoy contigo...
    
        En nuestra cuarta cita, la verdad es que ya entend√≠ que estaba verdaderamente c√≥modo contigo. Solamente al charlar y re√≠r juntos era suficiente para llenarme, aunque me puso s√∫per feliz el que pudi√©semos por fin cenar la maldita pasta carbonara JAJAJA... Que por poco fue atacada por la superpolilla gigante üòÇ. Verdaderamente, siempre tiene que haber un momento memorable cuando nos vemos...
    
        Y hablando de memorable, nuestra quinta cita la verdad es que fue especial. Me encant√≥ charlar contigo, me encant√≥ re√≠r a carcajadas contigo, me encant√≥ hacerlo contigo, me encant√≥ cocinar contigo, y me encantaron los patacones... Para m√≠, todo en esa noche fue genial.
    
        Y aunque recientemente est√©s pasando por un mal momento, espero que este texto pueda aportar un granito de arena para que recuerdes que los momentos valiosos y memorables se escriben a diario y que en esta vida nada duele para siempre. Que estar√© contigo, ya sea f√≠sica o telef√≥nicamente, siempre que lo necesites (no solo te lo digo, sino que tambi√©n te lo demostrar√©), y que sepas lo especial que ha sido este √∫ltimo mes para m√≠.
    
        Si has le√≠do todo el texto hasta el final, te lo agradezco de coraz√≥n. Nunca hab√≠a escrito un mensaje tan largo para una persona.
    
        Por √∫ltimo, tengo que decirte que espero que este mes no sea algo espor√°dico que vaya a recordar con cari√±o, sino que sea algo que se alargue en el tiempo y que pueda preparar contigo m√°s recetas, pueda escribirte m√°s textos y que pueda vivir m√°s contigo, Chocolatet.
    
        Muchas gracias ü§ç"""
    )

app = Flask(__name__)

# Creamos la aplicaci√≥n
application = Application.builder().token(TOKEN).build()
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("set", set_cita))
application.add_handler(CommandHandler("falta", cuanto_falta))
application.add_handler(CommandHandler("mes", mes_mensaje))

loop = asyncio.new_event_loop()
asyncio.set_event_loop(loop)

@app.route("/procesar-logs", methods=["GET"])
def procesar_logs():
    lock.acquire()
    try:
        if not os.path.exists(LOG_BUFFER_FILE):
            return "No logs", 200

        with open(LOG_BUFFER_FILE, "r") as f:
            logs = json.load(f)

        if not logs:
            return "No logs", 200

        # Enviar logs uno a uno (o implementar env√≠o en batch si Google Apps Script lo permite)
        for log in logs:
            try:
                requests.post(GOOGLE_SCRIPT_WEBHOOK,
                              json={"usuario": log["usuario"], "comando": log["comando"]},
                              timeout=5)
            except Exception as e:
                print(f"Error enviando log a Google Sheets: {e}", flush=True)

        # Limpiar buffer
        with open(LOG_BUFFER_FILE, "w") as f:
            json.dump([], f)

        return "Logs procesados", 200
    finally:
        lock.release()

async def start_app():
    await application.initialize()  # Inicializa internamente el bot tambi√©n
    await application.start()
    # Mantener vivo el loop para que el bot no cierre
    while True:
        await asyncio.sleep(3600)

def run_bot():
    loop.run_until_complete(start_app())

threading.Thread(target=run_bot, daemon=True).start()

@app.route(f"/webhook/{TOKEN}", methods=["POST"])
def webhook_handler():
    json_update = request.get_json(force=True)
    update = Update.de_json(json_update, application.bot)  # Usar bot ya inicializado en application
    future = asyncio.run_coroutine_threadsafe(application.process_update(update), loop)
    try:
        future.result(timeout=10)
    except Exception as e:
        print(f"Error procesando update: {e}")
        return "Error", 500
    return "ok", 200

@app.route("/", methods=["GET"])
def home():
    return "Bot de Valentina y Adri√† est√° vivo ü§ç", 200

@app.route("/set-webhook", methods=["GET"])
def set_webhook():
    webhook_url = f"https://tu-dominio.com/webhook/{TOKEN}"
    success = loop.run_until_complete(application.bot.set_webhook(url=webhook_url))
    return f"Webhook {'creado con √©xito' if success else 'fall√≥'}"

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
